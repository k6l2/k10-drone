-Create a simple breadboard circuit connecting Arduino Uno + sparkfun bluesmirf silver + GY-87
-[ARDUINO FLIGHT CONTROLLER] communication & programming of the bluesmirf
-[ARDUINO FLIGHT CONTROLLER] read GY-87 output and print the output to Serial & bluetooth just to see if it's working
-[PC APPLICATION] SDL2 window
-[PC APPLICATION] OpenGL 4.6 context
-[PC APPLICATION] ImGUI
-[PC APPLICATION] connect to bluetooth device and facilitate serial I/O
-[PC APPLICATION] read GY-87 data from the drone and display using GUI
-[PC APPLICATION] move bluetooth device inquiry to a separate thread
-[PC APPLICATION] move bluetooth socket I/O to a separate thread
-[PC APPLICATION] create origin mesh
-[PC APPLICATION] draw 3D model of the drone
-[PC APPLICATION] orbit camera around the origin, control w/ mouse (click+drag)
-[PC APPLICATION] test remote programming of the bluesmirf
-[ARDUINO FLIGHT CONTROLLER] pack the GY-87 data into binary instead of ASCII text
-[PC APPLICATION] decode binary telemetry
-[ARDUINO FLIGHT CONTROLLER] implement some kind of Absolute Orientation Sensor using raw IMU output
	sensor fusion info: https://www.w3.org/TR/motion-sensors/
-[PC APPLICATION] set the 3D model of the drone to the interpreted orientation based on telemetry
--------------------------- DONE ----------------------------------------------
-purchase necessary drone parts for the next phase of development
	-frame
	-battery
	-charger
	-Power Distribution Board
	-Electronic Speed Controllers
	-Motors
	-Props
	-jumper wire headers for my old radio's Rx module
		https://www.sparkfun.com/products/10368 ???
	-whip antenna tube that's long enough to keep the antenna out of the props
	-28-pin dip socket for the atmega
		https://www.sparkfun.com/products/7942
-[ARDUINO FLIGHT CONTROLLER] improve calculation of 'relativeOrientationRadians' because right now this method kinda sucks